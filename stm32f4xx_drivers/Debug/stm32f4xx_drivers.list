
stm32f4xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000005d8  08000194  08000194  00010194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  0800076c  08000774  00010774  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  0800076c  0800076c  00010774  2**0
                  CONTENTS
  4 .ARM          00000000  0800076c  0800076c  00010774  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800076c  08000774  00010774  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800076c  0800076c  0001076c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000770  08000770  00010770  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010774  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000774  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000774  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00010774  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000a61  00000000  00000000  000107a4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000002b1  00000000  00000000  00011205  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000c0  00000000  00000000  000114b8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000098  00000000  00000000  00011578  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000019c5  00000000  00000000  00011610  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000dfd  00000000  00000000  00012fd5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00005f47  00000000  00000000  00013dd2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  00019d19  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000024c  00000000  00000000  00019d6c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	; (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000000 	.word	0x20000000
 80001b0:	00000000 	.word	0x00000000
 80001b4:	08000754 	.word	0x08000754

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	; (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	; (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	; (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000004 	.word	0x20000004
 80001d0:	08000754 	.word	0x08000754

080001d4 <delayMs>:
#include "stm32f401xx.h"
#include <stm32f401xx_gpio_drivers.h>


void delayMs(void)
{
 80001d4:	b480      	push	{r7}
 80001d6:	b083      	sub	sp, #12
 80001d8:	af00      	add	r7, sp, #0
	for(uint32_t i= 0; i<50000;i++);
 80001da:	2300      	movs	r3, #0
 80001dc:	607b      	str	r3, [r7, #4]
 80001de:	e002      	b.n	80001e6 <delayMs+0x12>
 80001e0:	687b      	ldr	r3, [r7, #4]
 80001e2:	3301      	adds	r3, #1
 80001e4:	607b      	str	r3, [r7, #4]
 80001e6:	687b      	ldr	r3, [r7, #4]
 80001e8:	f24c 324f 	movw	r2, #49999	; 0xc34f
 80001ec:	4293      	cmp	r3, r2
 80001ee:	d9f7      	bls.n	80001e0 <delayMs+0xc>
}
 80001f0:	bf00      	nop
 80001f2:	bf00      	nop
 80001f4:	370c      	adds	r7, #12
 80001f6:	46bd      	mov	sp, r7
 80001f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80001fc:	4770      	bx	lr
	...

08000200 <main>:

int main(void)
{
 8000200:	b580      	push	{r7, lr}
 8000202:	b084      	sub	sp, #16
 8000204:	af00      	add	r7, sp, #0
	GPIO_PeriClockControl(GPIOA, ENABLE);
 8000206:	2101      	movs	r1, #1
 8000208:	480c      	ldr	r0, [pc, #48]	; (800023c <main+0x3c>)
 800020a:	f000 f845 	bl	8000298 <GPIO_PeriClockControl>

	GPIO_Handle_t GpioLed;

	GpioLed.pGPIOx = GPIOA;
 800020e:	4b0b      	ldr	r3, [pc, #44]	; (800023c <main+0x3c>)
 8000210:	607b      	str	r3, [r7, #4]
	GpioLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_5;
 8000212:	2305      	movs	r3, #5
 8000214:	723b      	strb	r3, [r7, #8]
	GpioLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 8000216:	2301      	movs	r3, #1
 8000218:	727b      	strb	r3, [r7, #9]
	GpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 800021a:	2302      	movs	r3, #2
 800021c:	72bb      	strb	r3, [r7, #10]
	GpioLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 800021e:	2300      	movs	r3, #0
 8000220:	733b      	strb	r3, [r7, #12]
	GpioLed.GPIO_PinConfig.GPIO_PuPdControl = GPIO_NO_PUPD;
 8000222:	2300      	movs	r3, #0
 8000224:	72fb      	strb	r3, [r7, #11]

	GPIO_Init(&GpioLed);
 8000226:	1d3b      	adds	r3, r7, #4
 8000228:	4618      	mov	r0, r3
 800022a:	f000 f8d5 	bl	80003d8 <GPIO_Init>

	while(1)
	{
		GPIO_ToggleOutputPin(GPIOD, GPIO_PIN_NO_12);
 800022e:	210c      	movs	r1, #12
 8000230:	4803      	ldr	r0, [pc, #12]	; (8000240 <main+0x40>)
 8000232:	f000 fa55 	bl	80006e0 <GPIO_ToggleOutputPin>
		delayMs();
 8000236:	f7ff ffcd 	bl	80001d4 <delayMs>
		GPIO_ToggleOutputPin(GPIOD, GPIO_PIN_NO_12);
 800023a:	e7f8      	b.n	800022e <main+0x2e>
 800023c:	40020000 	.word	0x40020000
 8000240:	40020c00 	.word	0x40020c00

08000244 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000244:	480d      	ldr	r0, [pc, #52]	; (800027c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000246:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000248:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800024c:	480c      	ldr	r0, [pc, #48]	; (8000280 <LoopForever+0x6>)
  ldr r1, =_edata
 800024e:	490d      	ldr	r1, [pc, #52]	; (8000284 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000250:	4a0d      	ldr	r2, [pc, #52]	; (8000288 <LoopForever+0xe>)
  movs r3, #0
 8000252:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000254:	e002      	b.n	800025c <LoopCopyDataInit>

08000256 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000256:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000258:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800025a:	3304      	adds	r3, #4

0800025c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800025c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800025e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000260:	d3f9      	bcc.n	8000256 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000262:	4a0a      	ldr	r2, [pc, #40]	; (800028c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000264:	4c0a      	ldr	r4, [pc, #40]	; (8000290 <LoopForever+0x16>)
  movs r3, #0
 8000266:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000268:	e001      	b.n	800026e <LoopFillZerobss>

0800026a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800026a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800026c:	3204      	adds	r2, #4

0800026e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800026e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000270:	d3fb      	bcc.n	800026a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000272:	f000 fa4b 	bl	800070c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000276:	f7ff ffc3 	bl	8000200 <main>

0800027a <LoopForever>:

LoopForever:
    b LoopForever
 800027a:	e7fe      	b.n	800027a <LoopForever>
  ldr   r0, =_estack
 800027c:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 8000280:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000284:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000288:	08000774 	.word	0x08000774
  ldr r2, =_sbss
 800028c:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000290:	2000001c 	.word	0x2000001c

08000294 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000294:	e7fe      	b.n	8000294 <ADC_IRQHandler>
	...

08000298 <GPIO_PeriClockControl>:
 *
 * @Note         - None
 *
 */
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)
{
 8000298:	b480      	push	{r7}
 800029a:	b083      	sub	sp, #12
 800029c:	af00      	add	r7, sp, #0
 800029e:	6078      	str	r0, [r7, #4]
 80002a0:	460b      	mov	r3, r1
 80002a2:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == ENABLE)
 80002a4:	78fb      	ldrb	r3, [r7, #3]
 80002a6:	2b01      	cmp	r3, #1
 80002a8:	d141      	bne.n	800032e <GPIO_PeriClockControl+0x96>
	{
		if(pGPIOx == GPIOA)
 80002aa:	687b      	ldr	r3, [r7, #4]
 80002ac:	4a43      	ldr	r2, [pc, #268]	; (80003bc <GPIO_PeriClockControl+0x124>)
 80002ae:	4293      	cmp	r3, r2
 80002b0:	d106      	bne.n	80002c0 <GPIO_PeriClockControl+0x28>
		{
			GPIOA_PCLK_EN();
 80002b2:	4b43      	ldr	r3, [pc, #268]	; (80003c0 <GPIO_PeriClockControl+0x128>)
 80002b4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002b6:	4a42      	ldr	r2, [pc, #264]	; (80003c0 <GPIO_PeriClockControl+0x128>)
 80002b8:	f043 0301 	orr.w	r3, r3, #1
 80002bc:	6313      	str	r3, [r2, #48]	; 0x30
		else if(pGPIOx == GPIOH)
		{
			GPIOH_PCLK_DI();
		}
	}
}
 80002be:	e077      	b.n	80003b0 <GPIO_PeriClockControl+0x118>
		else if(pGPIOx == GPIOB)
 80002c0:	687b      	ldr	r3, [r7, #4]
 80002c2:	4a40      	ldr	r2, [pc, #256]	; (80003c4 <GPIO_PeriClockControl+0x12c>)
 80002c4:	4293      	cmp	r3, r2
 80002c6:	d106      	bne.n	80002d6 <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 80002c8:	4b3d      	ldr	r3, [pc, #244]	; (80003c0 <GPIO_PeriClockControl+0x128>)
 80002ca:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002cc:	4a3c      	ldr	r2, [pc, #240]	; (80003c0 <GPIO_PeriClockControl+0x128>)
 80002ce:	f043 0302 	orr.w	r3, r3, #2
 80002d2:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002d4:	e06c      	b.n	80003b0 <GPIO_PeriClockControl+0x118>
		else if(pGPIOx == GPIOC)
 80002d6:	687b      	ldr	r3, [r7, #4]
 80002d8:	4a3b      	ldr	r2, [pc, #236]	; (80003c8 <GPIO_PeriClockControl+0x130>)
 80002da:	4293      	cmp	r3, r2
 80002dc:	d106      	bne.n	80002ec <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 80002de:	4b38      	ldr	r3, [pc, #224]	; (80003c0 <GPIO_PeriClockControl+0x128>)
 80002e0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002e2:	4a37      	ldr	r2, [pc, #220]	; (80003c0 <GPIO_PeriClockControl+0x128>)
 80002e4:	f043 0304 	orr.w	r3, r3, #4
 80002e8:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002ea:	e061      	b.n	80003b0 <GPIO_PeriClockControl+0x118>
		else if(pGPIOx == GPIOD)
 80002ec:	687b      	ldr	r3, [r7, #4]
 80002ee:	4a37      	ldr	r2, [pc, #220]	; (80003cc <GPIO_PeriClockControl+0x134>)
 80002f0:	4293      	cmp	r3, r2
 80002f2:	d106      	bne.n	8000302 <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 80002f4:	4b32      	ldr	r3, [pc, #200]	; (80003c0 <GPIO_PeriClockControl+0x128>)
 80002f6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002f8:	4a31      	ldr	r2, [pc, #196]	; (80003c0 <GPIO_PeriClockControl+0x128>)
 80002fa:	f043 0308 	orr.w	r3, r3, #8
 80002fe:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000300:	e056      	b.n	80003b0 <GPIO_PeriClockControl+0x118>
		else if(pGPIOx == GPIOE)
 8000302:	687b      	ldr	r3, [r7, #4]
 8000304:	4a32      	ldr	r2, [pc, #200]	; (80003d0 <GPIO_PeriClockControl+0x138>)
 8000306:	4293      	cmp	r3, r2
 8000308:	d106      	bne.n	8000318 <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 800030a:	4b2d      	ldr	r3, [pc, #180]	; (80003c0 <GPIO_PeriClockControl+0x128>)
 800030c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800030e:	4a2c      	ldr	r2, [pc, #176]	; (80003c0 <GPIO_PeriClockControl+0x128>)
 8000310:	f043 0310 	orr.w	r3, r3, #16
 8000314:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000316:	e04b      	b.n	80003b0 <GPIO_PeriClockControl+0x118>
		else if(pGPIOx == GPIOH)
 8000318:	687b      	ldr	r3, [r7, #4]
 800031a:	4a2e      	ldr	r2, [pc, #184]	; (80003d4 <GPIO_PeriClockControl+0x13c>)
 800031c:	4293      	cmp	r3, r2
 800031e:	d147      	bne.n	80003b0 <GPIO_PeriClockControl+0x118>
			GPIOH_PCLK_EN();
 8000320:	4b27      	ldr	r3, [pc, #156]	; (80003c0 <GPIO_PeriClockControl+0x128>)
 8000322:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000324:	4a26      	ldr	r2, [pc, #152]	; (80003c0 <GPIO_PeriClockControl+0x128>)
 8000326:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800032a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800032c:	e040      	b.n	80003b0 <GPIO_PeriClockControl+0x118>
		if(pGPIOx == GPIOA)
 800032e:	687b      	ldr	r3, [r7, #4]
 8000330:	4a22      	ldr	r2, [pc, #136]	; (80003bc <GPIO_PeriClockControl+0x124>)
 8000332:	4293      	cmp	r3, r2
 8000334:	d106      	bne.n	8000344 <GPIO_PeriClockControl+0xac>
			GPIOA_PCLK_DI();
 8000336:	4b22      	ldr	r3, [pc, #136]	; (80003c0 <GPIO_PeriClockControl+0x128>)
 8000338:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800033a:	4a21      	ldr	r2, [pc, #132]	; (80003c0 <GPIO_PeriClockControl+0x128>)
 800033c:	f023 0301 	bic.w	r3, r3, #1
 8000340:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000342:	e035      	b.n	80003b0 <GPIO_PeriClockControl+0x118>
		else if(pGPIOx == GPIOB)
 8000344:	687b      	ldr	r3, [r7, #4]
 8000346:	4a1f      	ldr	r2, [pc, #124]	; (80003c4 <GPIO_PeriClockControl+0x12c>)
 8000348:	4293      	cmp	r3, r2
 800034a:	d106      	bne.n	800035a <GPIO_PeriClockControl+0xc2>
			GPIOB_PCLK_DI();
 800034c:	4b1c      	ldr	r3, [pc, #112]	; (80003c0 <GPIO_PeriClockControl+0x128>)
 800034e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000350:	4a1b      	ldr	r2, [pc, #108]	; (80003c0 <GPIO_PeriClockControl+0x128>)
 8000352:	f023 0302 	bic.w	r3, r3, #2
 8000356:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000358:	e02a      	b.n	80003b0 <GPIO_PeriClockControl+0x118>
		else if(pGPIOx == GPIOC)
 800035a:	687b      	ldr	r3, [r7, #4]
 800035c:	4a1a      	ldr	r2, [pc, #104]	; (80003c8 <GPIO_PeriClockControl+0x130>)
 800035e:	4293      	cmp	r3, r2
 8000360:	d106      	bne.n	8000370 <GPIO_PeriClockControl+0xd8>
			GPIOC_PCLK_DI();
 8000362:	4b17      	ldr	r3, [pc, #92]	; (80003c0 <GPIO_PeriClockControl+0x128>)
 8000364:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000366:	4a16      	ldr	r2, [pc, #88]	; (80003c0 <GPIO_PeriClockControl+0x128>)
 8000368:	f023 0304 	bic.w	r3, r3, #4
 800036c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800036e:	e01f      	b.n	80003b0 <GPIO_PeriClockControl+0x118>
		else if(pGPIOx == GPIOD)
 8000370:	687b      	ldr	r3, [r7, #4]
 8000372:	4a16      	ldr	r2, [pc, #88]	; (80003cc <GPIO_PeriClockControl+0x134>)
 8000374:	4293      	cmp	r3, r2
 8000376:	d106      	bne.n	8000386 <GPIO_PeriClockControl+0xee>
			GPIOD_PCLK_DI();
 8000378:	4b11      	ldr	r3, [pc, #68]	; (80003c0 <GPIO_PeriClockControl+0x128>)
 800037a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800037c:	4a10      	ldr	r2, [pc, #64]	; (80003c0 <GPIO_PeriClockControl+0x128>)
 800037e:	f023 0308 	bic.w	r3, r3, #8
 8000382:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000384:	e014      	b.n	80003b0 <GPIO_PeriClockControl+0x118>
		else if(pGPIOx == GPIOE)
 8000386:	687b      	ldr	r3, [r7, #4]
 8000388:	4a11      	ldr	r2, [pc, #68]	; (80003d0 <GPIO_PeriClockControl+0x138>)
 800038a:	4293      	cmp	r3, r2
 800038c:	d106      	bne.n	800039c <GPIO_PeriClockControl+0x104>
			GPIOE_PCLK_DI();
 800038e:	4b0c      	ldr	r3, [pc, #48]	; (80003c0 <GPIO_PeriClockControl+0x128>)
 8000390:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000392:	4a0b      	ldr	r2, [pc, #44]	; (80003c0 <GPIO_PeriClockControl+0x128>)
 8000394:	f023 0310 	bic.w	r3, r3, #16
 8000398:	6313      	str	r3, [r2, #48]	; 0x30
}
 800039a:	e009      	b.n	80003b0 <GPIO_PeriClockControl+0x118>
		else if(pGPIOx == GPIOH)
 800039c:	687b      	ldr	r3, [r7, #4]
 800039e:	4a0d      	ldr	r2, [pc, #52]	; (80003d4 <GPIO_PeriClockControl+0x13c>)
 80003a0:	4293      	cmp	r3, r2
 80003a2:	d105      	bne.n	80003b0 <GPIO_PeriClockControl+0x118>
			GPIOH_PCLK_DI();
 80003a4:	4b06      	ldr	r3, [pc, #24]	; (80003c0 <GPIO_PeriClockControl+0x128>)
 80003a6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003a8:	4a05      	ldr	r2, [pc, #20]	; (80003c0 <GPIO_PeriClockControl+0x128>)
 80003aa:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80003ae:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003b0:	bf00      	nop
 80003b2:	370c      	adds	r7, #12
 80003b4:	46bd      	mov	sp, r7
 80003b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003ba:	4770      	bx	lr
 80003bc:	40020000 	.word	0x40020000
 80003c0:	40023800 	.word	0x40023800
 80003c4:	40020400 	.word	0x40020400
 80003c8:	40020800 	.word	0x40020800
 80003cc:	40020c00 	.word	0x40020c00
 80003d0:	40021000 	.word	0x40021000
 80003d4:	40021c00 	.word	0x40021c00

080003d8 <GPIO_Init>:
 * @Note         - None
 *
 */
void GPIO_Init(GPIO_Handle_t *pGPIOHandle)

{
 80003d8:	b580      	push	{r7, lr}
 80003da:	b086      	sub	sp, #24
 80003dc:	af00      	add	r7, sp, #0
 80003de:	6078      	str	r0, [r7, #4]
	// Enable the peripheral Clock
	GPIO_PeriClockControl(pGPIOHandle->pGPIOx, ENABLE);
 80003e0:	687b      	ldr	r3, [r7, #4]
 80003e2:	681b      	ldr	r3, [r3, #0]
 80003e4:	2101      	movs	r1, #1
 80003e6:	4618      	mov	r0, r3
 80003e8:	f7ff ff56 	bl	8000298 <GPIO_PeriClockControl>

	uint32_t temp=0;
 80003ec:	2300      	movs	r3, #0
 80003ee:	617b      	str	r3, [r7, #20]
	// 1. configure the mode of gpio pin
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 80003f0:	687b      	ldr	r3, [r7, #4]
 80003f2:	795b      	ldrb	r3, [r3, #5]
 80003f4:	2b03      	cmp	r3, #3
 80003f6:	d81f      	bhi.n	8000438 <GPIO_Init+0x60>
	{
		//non interupt mode '
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80003f8:	687b      	ldr	r3, [r7, #4]
 80003fa:	795b      	ldrb	r3, [r3, #5]
 80003fc:	461a      	mov	r2, r3
 80003fe:	687b      	ldr	r3, [r7, #4]
 8000400:	791b      	ldrb	r3, [r3, #4]
 8000402:	005b      	lsls	r3, r3, #1
 8000404:	fa02 f303 	lsl.w	r3, r2, r3
 8000408:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->MODER &= ~(0x03 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); //clear
 800040a:	687b      	ldr	r3, [r7, #4]
 800040c:	681b      	ldr	r3, [r3, #0]
 800040e:	681a      	ldr	r2, [r3, #0]
 8000410:	687b      	ldr	r3, [r7, #4]
 8000412:	791b      	ldrb	r3, [r3, #4]
 8000414:	4619      	mov	r1, r3
 8000416:	2303      	movs	r3, #3
 8000418:	408b      	lsls	r3, r1
 800041a:	43db      	mvns	r3, r3
 800041c:	4619      	mov	r1, r3
 800041e:	687b      	ldr	r3, [r7, #4]
 8000420:	681b      	ldr	r3, [r3, #0]
 8000422:	400a      	ands	r2, r1
 8000424:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp;
 8000426:	687b      	ldr	r3, [r7, #4]
 8000428:	681b      	ldr	r3, [r3, #0]
 800042a:	6819      	ldr	r1, [r3, #0]
 800042c:	687b      	ldr	r3, [r7, #4]
 800042e:	681b      	ldr	r3, [r3, #0]
 8000430:	697a      	ldr	r2, [r7, #20]
 8000432:	430a      	orrs	r2, r1
 8000434:	601a      	str	r2, [r3, #0]
 8000436:	e0a1      	b.n	800057c <GPIO_Init+0x1a4>
	}else
	{
		//interupt mode

		//1.config interupt mode
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT)
 8000438:	687b      	ldr	r3, [r7, #4]
 800043a:	795b      	ldrb	r3, [r3, #5]
 800043c:	2b05      	cmp	r3, #5
 800043e:	d117      	bne.n	8000470 <GPIO_Init+0x98>
		{
			// config the FTSR
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000440:	4b9e      	ldr	r3, [pc, #632]	; (80006bc <GPIO_Init+0x2e4>)
 8000442:	68db      	ldr	r3, [r3, #12]
 8000444:	687a      	ldr	r2, [r7, #4]
 8000446:	7912      	ldrb	r2, [r2, #4]
 8000448:	4611      	mov	r1, r2
 800044a:	2201      	movs	r2, #1
 800044c:	408a      	lsls	r2, r1
 800044e:	4611      	mov	r1, r2
 8000450:	4a9a      	ldr	r2, [pc, #616]	; (80006bc <GPIO_Init+0x2e4>)
 8000452:	430b      	orrs	r3, r1
 8000454:	60d3      	str	r3, [r2, #12]

			// Clear the corresponding RTSR bit
			EXTI->RTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000456:	4b99      	ldr	r3, [pc, #612]	; (80006bc <GPIO_Init+0x2e4>)
 8000458:	689b      	ldr	r3, [r3, #8]
 800045a:	687a      	ldr	r2, [r7, #4]
 800045c:	7912      	ldrb	r2, [r2, #4]
 800045e:	4611      	mov	r1, r2
 8000460:	2201      	movs	r2, #1
 8000462:	408a      	lsls	r2, r1
 8000464:	43d2      	mvns	r2, r2
 8000466:	4611      	mov	r1, r2
 8000468:	4a94      	ldr	r2, [pc, #592]	; (80006bc <GPIO_Init+0x2e4>)
 800046a:	400b      	ands	r3, r1
 800046c:	6093      	str	r3, [r2, #8]
 800046e:	e035      	b.n	80004dc <GPIO_Init+0x104>
		}
		else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT)
 8000470:	687b      	ldr	r3, [r7, #4]
 8000472:	795b      	ldrb	r3, [r3, #5]
 8000474:	2b04      	cmp	r3, #4
 8000476:	d117      	bne.n	80004a8 <GPIO_Init+0xd0>
		{
			// config the RTSR
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000478:	4b90      	ldr	r3, [pc, #576]	; (80006bc <GPIO_Init+0x2e4>)
 800047a:	689b      	ldr	r3, [r3, #8]
 800047c:	687a      	ldr	r2, [r7, #4]
 800047e:	7912      	ldrb	r2, [r2, #4]
 8000480:	4611      	mov	r1, r2
 8000482:	2201      	movs	r2, #1
 8000484:	408a      	lsls	r2, r1
 8000486:	4611      	mov	r1, r2
 8000488:	4a8c      	ldr	r2, [pc, #560]	; (80006bc <GPIO_Init+0x2e4>)
 800048a:	430b      	orrs	r3, r1
 800048c:	6093      	str	r3, [r2, #8]

			// Clear the corresponding FTSR bit
			EXTI->FTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800048e:	4b8b      	ldr	r3, [pc, #556]	; (80006bc <GPIO_Init+0x2e4>)
 8000490:	68db      	ldr	r3, [r3, #12]
 8000492:	687a      	ldr	r2, [r7, #4]
 8000494:	7912      	ldrb	r2, [r2, #4]
 8000496:	4611      	mov	r1, r2
 8000498:	2201      	movs	r2, #1
 800049a:	408a      	lsls	r2, r1
 800049c:	43d2      	mvns	r2, r2
 800049e:	4611      	mov	r1, r2
 80004a0:	4a86      	ldr	r2, [pc, #536]	; (80006bc <GPIO_Init+0x2e4>)
 80004a2:	400b      	ands	r3, r1
 80004a4:	60d3      	str	r3, [r2, #12]
 80004a6:	e019      	b.n	80004dc <GPIO_Init+0x104>
		}
		else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RFT)
 80004a8:	687b      	ldr	r3, [r7, #4]
 80004aa:	795b      	ldrb	r3, [r3, #5]
 80004ac:	2b06      	cmp	r3, #6
 80004ae:	d115      	bne.n	80004dc <GPIO_Init+0x104>
		{
			// config both the FTSR and RTSR
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004b0:	4b82      	ldr	r3, [pc, #520]	; (80006bc <GPIO_Init+0x2e4>)
 80004b2:	68db      	ldr	r3, [r3, #12]
 80004b4:	687a      	ldr	r2, [r7, #4]
 80004b6:	7912      	ldrb	r2, [r2, #4]
 80004b8:	4611      	mov	r1, r2
 80004ba:	2201      	movs	r2, #1
 80004bc:	408a      	lsls	r2, r1
 80004be:	4611      	mov	r1, r2
 80004c0:	4a7e      	ldr	r2, [pc, #504]	; (80006bc <GPIO_Init+0x2e4>)
 80004c2:	430b      	orrs	r3, r1
 80004c4:	60d3      	str	r3, [r2, #12]

			// Clear the corresponding RTSR bit
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004c6:	4b7d      	ldr	r3, [pc, #500]	; (80006bc <GPIO_Init+0x2e4>)
 80004c8:	689b      	ldr	r3, [r3, #8]
 80004ca:	687a      	ldr	r2, [r7, #4]
 80004cc:	7912      	ldrb	r2, [r2, #4]
 80004ce:	4611      	mov	r1, r2
 80004d0:	2201      	movs	r2, #1
 80004d2:	408a      	lsls	r2, r1
 80004d4:	4611      	mov	r1, r2
 80004d6:	4a79      	ldr	r2, [pc, #484]	; (80006bc <GPIO_Init+0x2e4>)
 80004d8:	430b      	orrs	r3, r1
 80004da:	6093      	str	r3, [r2, #8]
		}

			//2.configure the GPIO port selection  in SYSCFG_EXTICR

			uint8_t temp1 = (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)/4;
 80004dc:	687b      	ldr	r3, [r7, #4]
 80004de:	791b      	ldrb	r3, [r3, #4]
 80004e0:	089b      	lsrs	r3, r3, #2
 80004e2:	74fb      	strb	r3, [r7, #19]
			uint8_t temp2 = (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)%4;
 80004e4:	687b      	ldr	r3, [r7, #4]
 80004e6:	791b      	ldrb	r3, [r3, #4]
 80004e8:	f003 0303 	and.w	r3, r3, #3
 80004ec:	74bb      	strb	r3, [r7, #18]
			uint8_t portcode = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 80004ee:	687b      	ldr	r3, [r7, #4]
 80004f0:	681b      	ldr	r3, [r3, #0]
 80004f2:	4a73      	ldr	r2, [pc, #460]	; (80006c0 <GPIO_Init+0x2e8>)
 80004f4:	4293      	cmp	r3, r2
 80004f6:	d024      	beq.n	8000542 <GPIO_Init+0x16a>
 80004f8:	687b      	ldr	r3, [r7, #4]
 80004fa:	681b      	ldr	r3, [r3, #0]
 80004fc:	4a71      	ldr	r2, [pc, #452]	; (80006c4 <GPIO_Init+0x2ec>)
 80004fe:	4293      	cmp	r3, r2
 8000500:	d01d      	beq.n	800053e <GPIO_Init+0x166>
 8000502:	687b      	ldr	r3, [r7, #4]
 8000504:	681b      	ldr	r3, [r3, #0]
 8000506:	4a70      	ldr	r2, [pc, #448]	; (80006c8 <GPIO_Init+0x2f0>)
 8000508:	4293      	cmp	r3, r2
 800050a:	d016      	beq.n	800053a <GPIO_Init+0x162>
 800050c:	687b      	ldr	r3, [r7, #4]
 800050e:	681b      	ldr	r3, [r3, #0]
 8000510:	4a6e      	ldr	r2, [pc, #440]	; (80006cc <GPIO_Init+0x2f4>)
 8000512:	4293      	cmp	r3, r2
 8000514:	d00f      	beq.n	8000536 <GPIO_Init+0x15e>
 8000516:	687b      	ldr	r3, [r7, #4]
 8000518:	681b      	ldr	r3, [r3, #0]
 800051a:	4a6d      	ldr	r2, [pc, #436]	; (80006d0 <GPIO_Init+0x2f8>)
 800051c:	4293      	cmp	r3, r2
 800051e:	d008      	beq.n	8000532 <GPIO_Init+0x15a>
 8000520:	687b      	ldr	r3, [r7, #4]
 8000522:	681b      	ldr	r3, [r3, #0]
 8000524:	4a6b      	ldr	r2, [pc, #428]	; (80006d4 <GPIO_Init+0x2fc>)
 8000526:	4293      	cmp	r3, r2
 8000528:	d101      	bne.n	800052e <GPIO_Init+0x156>
 800052a:	2307      	movs	r3, #7
 800052c:	e00a      	b.n	8000544 <GPIO_Init+0x16c>
 800052e:	2300      	movs	r3, #0
 8000530:	e008      	b.n	8000544 <GPIO_Init+0x16c>
 8000532:	2304      	movs	r3, #4
 8000534:	e006      	b.n	8000544 <GPIO_Init+0x16c>
 8000536:	2303      	movs	r3, #3
 8000538:	e004      	b.n	8000544 <GPIO_Init+0x16c>
 800053a:	2302      	movs	r3, #2
 800053c:	e002      	b.n	8000544 <GPIO_Init+0x16c>
 800053e:	2301      	movs	r3, #1
 8000540:	e000      	b.n	8000544 <GPIO_Init+0x16c>
 8000542:	2300      	movs	r3, #0
 8000544:	747b      	strb	r3, [r7, #17]
			SYSCFG_PCLK_EN();
 8000546:	4b64      	ldr	r3, [pc, #400]	; (80006d8 <GPIO_Init+0x300>)
 8000548:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800054a:	4a63      	ldr	r2, [pc, #396]	; (80006d8 <GPIO_Init+0x300>)
 800054c:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000550:	6453      	str	r3, [r2, #68]	; 0x44
			SYSCFG->EXTICR[temp1] = portcode << (4*temp2) ;
 8000552:	7c7a      	ldrb	r2, [r7, #17]
 8000554:	7cbb      	ldrb	r3, [r7, #18]
 8000556:	009b      	lsls	r3, r3, #2
 8000558:	fa02 f103 	lsl.w	r1, r2, r3
 800055c:	4a5f      	ldr	r2, [pc, #380]	; (80006dc <GPIO_Init+0x304>)
 800055e:	7cfb      	ldrb	r3, [r7, #19]
 8000560:	3302      	adds	r3, #2
 8000562:	f842 1023 	str.w	r1, [r2, r3, lsl #2]

			//3.enable the exti interupt delivery using IMR
			EXTI->IMR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000566:	4b55      	ldr	r3, [pc, #340]	; (80006bc <GPIO_Init+0x2e4>)
 8000568:	681b      	ldr	r3, [r3, #0]
 800056a:	687a      	ldr	r2, [r7, #4]
 800056c:	7912      	ldrb	r2, [r2, #4]
 800056e:	4611      	mov	r1, r2
 8000570:	2201      	movs	r2, #1
 8000572:	408a      	lsls	r2, r1
 8000574:	4611      	mov	r1, r2
 8000576:	4a51      	ldr	r2, [pc, #324]	; (80006bc <GPIO_Init+0x2e4>)
 8000578:	430b      	orrs	r3, r1
 800057a:	6013      	str	r3, [r2, #0]
	}

	// 2. configure the speed
	temp = 0;
 800057c:	2300      	movs	r3, #0
 800057e:	617b      	str	r3, [r7, #20]
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000580:	687b      	ldr	r3, [r7, #4]
 8000582:	799b      	ldrb	r3, [r3, #6]
 8000584:	461a      	mov	r2, r3
 8000586:	687b      	ldr	r3, [r7, #4]
 8000588:	791b      	ldrb	r3, [r3, #4]
 800058a:	005b      	lsls	r3, r3, #1
 800058c:	fa02 f303 	lsl.w	r3, r2, r3
 8000590:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x03 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); //clear
 8000592:	687b      	ldr	r3, [r7, #4]
 8000594:	681b      	ldr	r3, [r3, #0]
 8000596:	689a      	ldr	r2, [r3, #8]
 8000598:	687b      	ldr	r3, [r7, #4]
 800059a:	791b      	ldrb	r3, [r3, #4]
 800059c:	4619      	mov	r1, r3
 800059e:	2303      	movs	r3, #3
 80005a0:	408b      	lsls	r3, r1
 80005a2:	43db      	mvns	r3, r3
 80005a4:	4619      	mov	r1, r3
 80005a6:	687b      	ldr	r3, [r7, #4]
 80005a8:	681b      	ldr	r3, [r3, #0]
 80005aa:	400a      	ands	r2, r1
 80005ac:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 80005ae:	687b      	ldr	r3, [r7, #4]
 80005b0:	681b      	ldr	r3, [r3, #0]
 80005b2:	6899      	ldr	r1, [r3, #8]
 80005b4:	687b      	ldr	r3, [r7, #4]
 80005b6:	681b      	ldr	r3, [r3, #0]
 80005b8:	697a      	ldr	r2, [r7, #20]
 80005ba:	430a      	orrs	r2, r1
 80005bc:	609a      	str	r2, [r3, #8]

	// 3. configure the pupd settings
	temp = 0;
 80005be:	2300      	movs	r3, #0
 80005c0:	617b      	str	r3, [r7, #20]
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PuPdControl << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80005c2:	687b      	ldr	r3, [r7, #4]
 80005c4:	79db      	ldrb	r3, [r3, #7]
 80005c6:	461a      	mov	r2, r3
 80005c8:	687b      	ldr	r3, [r7, #4]
 80005ca:	791b      	ldrb	r3, [r3, #4]
 80005cc:	005b      	lsls	r3, r3, #1
 80005ce:	fa02 f303 	lsl.w	r3, r2, r3
 80005d2:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->PUPDR &= ~(0x03 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); //clear
 80005d4:	687b      	ldr	r3, [r7, #4]
 80005d6:	681b      	ldr	r3, [r3, #0]
 80005d8:	68da      	ldr	r2, [r3, #12]
 80005da:	687b      	ldr	r3, [r7, #4]
 80005dc:	791b      	ldrb	r3, [r3, #4]
 80005de:	4619      	mov	r1, r3
 80005e0:	2303      	movs	r3, #3
 80005e2:	408b      	lsls	r3, r1
 80005e4:	43db      	mvns	r3, r3
 80005e6:	4619      	mov	r1, r3
 80005e8:	687b      	ldr	r3, [r7, #4]
 80005ea:	681b      	ldr	r3, [r3, #0]
 80005ec:	400a      	ands	r2, r1
 80005ee:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 80005f0:	687b      	ldr	r3, [r7, #4]
 80005f2:	681b      	ldr	r3, [r3, #0]
 80005f4:	68d9      	ldr	r1, [r3, #12]
 80005f6:	687b      	ldr	r3, [r7, #4]
 80005f8:	681b      	ldr	r3, [r3, #0]
 80005fa:	697a      	ldr	r2, [r7, #20]
 80005fc:	430a      	orrs	r2, r1
 80005fe:	60da      	str	r2, [r3, #12]

	// 4. configure output type
	temp = 0;
 8000600:	2300      	movs	r3, #0
 8000602:	617b      	str	r3, [r7, #20]
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000604:	687b      	ldr	r3, [r7, #4]
 8000606:	7a1b      	ldrb	r3, [r3, #8]
 8000608:	461a      	mov	r2, r3
 800060a:	687b      	ldr	r3, [r7, #4]
 800060c:	791b      	ldrb	r3, [r3, #4]
 800060e:	005b      	lsls	r3, r3, #1
 8000610:	fa02 f303 	lsl.w	r3, r2, r3
 8000614:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OTYPER &= ~(0x01 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); //clear
 8000616:	687b      	ldr	r3, [r7, #4]
 8000618:	681b      	ldr	r3, [r3, #0]
 800061a:	685a      	ldr	r2, [r3, #4]
 800061c:	687b      	ldr	r3, [r7, #4]
 800061e:	791b      	ldrb	r3, [r3, #4]
 8000620:	4619      	mov	r1, r3
 8000622:	2301      	movs	r3, #1
 8000624:	408b      	lsls	r3, r1
 8000626:	43db      	mvns	r3, r3
 8000628:	4619      	mov	r1, r3
 800062a:	687b      	ldr	r3, [r7, #4]
 800062c:	681b      	ldr	r3, [r3, #0]
 800062e:	400a      	ands	r2, r1
 8000630:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 8000632:	687b      	ldr	r3, [r7, #4]
 8000634:	681b      	ldr	r3, [r3, #0]
 8000636:	6859      	ldr	r1, [r3, #4]
 8000638:	687b      	ldr	r3, [r7, #4]
 800063a:	681b      	ldr	r3, [r3, #0]
 800063c:	697a      	ldr	r2, [r7, #20]
 800063e:	430a      	orrs	r2, r1
 8000640:	605a      	str	r2, [r3, #4]

	// 5. configure alt functionality
	temp = 0;
 8000642:	2300      	movs	r3, #0
 8000644:	617b      	str	r3, [r7, #20]
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN)
 8000646:	687b      	ldr	r3, [r7, #4]
 8000648:	795b      	ldrb	r3, [r3, #5]
 800064a:	2b02      	cmp	r3, #2
 800064c:	d131      	bne.n	80006b2 <GPIO_Init+0x2da>
	{
		// config alt function register
		uint32_t temp1,temp2;
		temp1 = (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)/8;
 800064e:	687b      	ldr	r3, [r7, #4]
 8000650:	791b      	ldrb	r3, [r3, #4]
 8000652:	08db      	lsrs	r3, r3, #3
 8000654:	b2db      	uxtb	r3, r3
 8000656:	60fb      	str	r3, [r7, #12]
		temp2 =  (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)%8;
 8000658:	687b      	ldr	r3, [r7, #4]
 800065a:	791b      	ldrb	r3, [r3, #4]
 800065c:	f003 0307 	and.w	r3, r3, #7
 8000660:	60bb      	str	r3, [r7, #8]
		pGPIOHandle->pGPIOx->AFR[temp1] &= (0xF << (4 * temp2));
 8000662:	687b      	ldr	r3, [r7, #4]
 8000664:	681b      	ldr	r3, [r3, #0]
 8000666:	68fa      	ldr	r2, [r7, #12]
 8000668:	3208      	adds	r2, #8
 800066a:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 800066e:	68bb      	ldr	r3, [r7, #8]
 8000670:	009b      	lsls	r3, r3, #2
 8000672:	210f      	movs	r1, #15
 8000674:	fa01 f303 	lsl.w	r3, r1, r3
 8000678:	4619      	mov	r1, r3
 800067a:	687b      	ldr	r3, [r7, #4]
 800067c:	681b      	ldr	r3, [r3, #0]
 800067e:	4011      	ands	r1, r2
 8000680:	68fa      	ldr	r2, [r7, #12]
 8000682:	3208      	adds	r2, #8
 8000684:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4 * temp2));
 8000688:	687b      	ldr	r3, [r7, #4]
 800068a:	681b      	ldr	r3, [r3, #0]
 800068c:	68fa      	ldr	r2, [r7, #12]
 800068e:	3208      	adds	r2, #8
 8000690:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8000694:	687b      	ldr	r3, [r7, #4]
 8000696:	7a5b      	ldrb	r3, [r3, #9]
 8000698:	4619      	mov	r1, r3
 800069a:	68bb      	ldr	r3, [r7, #8]
 800069c:	009b      	lsls	r3, r3, #2
 800069e:	fa01 f303 	lsl.w	r3, r1, r3
 80006a2:	4619      	mov	r1, r3
 80006a4:	687b      	ldr	r3, [r7, #4]
 80006a6:	681b      	ldr	r3, [r3, #0]
 80006a8:	4311      	orrs	r1, r2
 80006aa:	68fa      	ldr	r2, [r7, #12]
 80006ac:	3208      	adds	r2, #8
 80006ae:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}
}
 80006b2:	bf00      	nop
 80006b4:	3718      	adds	r7, #24
 80006b6:	46bd      	mov	sp, r7
 80006b8:	bd80      	pop	{r7, pc}
 80006ba:	bf00      	nop
 80006bc:	40013c00 	.word	0x40013c00
 80006c0:	40020000 	.word	0x40020000
 80006c4:	40020400 	.word	0x40020400
 80006c8:	40020800 	.word	0x40020800
 80006cc:	40020c00 	.word	0x40020c00
 80006d0:	40021000 	.word	0x40021000
 80006d4:	40021c00 	.word	0x40021c00
 80006d8:	40023800 	.word	0x40023800
 80006dc:	40013800 	.word	0x40013800

080006e0 <GPIO_ToggleOutputPin>:
 *
 * @Note         - None
 *
 */
void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 80006e0:	b480      	push	{r7}
 80006e2:	b083      	sub	sp, #12
 80006e4:	af00      	add	r7, sp, #0
 80006e6:	6078      	str	r0, [r7, #4]
 80006e8:	460b      	mov	r3, r1
 80006ea:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR ^=  ( 1<< PinNumber);
 80006ec:	687b      	ldr	r3, [r7, #4]
 80006ee:	695b      	ldr	r3, [r3, #20]
 80006f0:	78fa      	ldrb	r2, [r7, #3]
 80006f2:	2101      	movs	r1, #1
 80006f4:	fa01 f202 	lsl.w	r2, r1, r2
 80006f8:	405a      	eors	r2, r3
 80006fa:	687b      	ldr	r3, [r7, #4]
 80006fc:	615a      	str	r2, [r3, #20]
}
 80006fe:	bf00      	nop
 8000700:	370c      	adds	r7, #12
 8000702:	46bd      	mov	sp, r7
 8000704:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000708:	4770      	bx	lr
	...

0800070c <__libc_init_array>:
 800070c:	b570      	push	{r4, r5, r6, lr}
 800070e:	4d0d      	ldr	r5, [pc, #52]	; (8000744 <__libc_init_array+0x38>)
 8000710:	4c0d      	ldr	r4, [pc, #52]	; (8000748 <__libc_init_array+0x3c>)
 8000712:	1b64      	subs	r4, r4, r5
 8000714:	10a4      	asrs	r4, r4, #2
 8000716:	2600      	movs	r6, #0
 8000718:	42a6      	cmp	r6, r4
 800071a:	d109      	bne.n	8000730 <__libc_init_array+0x24>
 800071c:	4d0b      	ldr	r5, [pc, #44]	; (800074c <__libc_init_array+0x40>)
 800071e:	4c0c      	ldr	r4, [pc, #48]	; (8000750 <__libc_init_array+0x44>)
 8000720:	f000 f818 	bl	8000754 <_init>
 8000724:	1b64      	subs	r4, r4, r5
 8000726:	10a4      	asrs	r4, r4, #2
 8000728:	2600      	movs	r6, #0
 800072a:	42a6      	cmp	r6, r4
 800072c:	d105      	bne.n	800073a <__libc_init_array+0x2e>
 800072e:	bd70      	pop	{r4, r5, r6, pc}
 8000730:	f855 3b04 	ldr.w	r3, [r5], #4
 8000734:	4798      	blx	r3
 8000736:	3601      	adds	r6, #1
 8000738:	e7ee      	b.n	8000718 <__libc_init_array+0xc>
 800073a:	f855 3b04 	ldr.w	r3, [r5], #4
 800073e:	4798      	blx	r3
 8000740:	3601      	adds	r6, #1
 8000742:	e7f2      	b.n	800072a <__libc_init_array+0x1e>
 8000744:	0800076c 	.word	0x0800076c
 8000748:	0800076c 	.word	0x0800076c
 800074c:	0800076c 	.word	0x0800076c
 8000750:	08000770 	.word	0x08000770

08000754 <_init>:
 8000754:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000756:	bf00      	nop
 8000758:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800075a:	bc08      	pop	{r3}
 800075c:	469e      	mov	lr, r3
 800075e:	4770      	bx	lr

08000760 <_fini>:
 8000760:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000762:	bf00      	nop
 8000764:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000766:	bc08      	pop	{r3}
 8000768:	469e      	mov	lr, r3
 800076a:	4770      	bx	lr
